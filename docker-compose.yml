version: '3.9'

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  postgis:
    image: postgis/postgis:16-3.4
    environment:
      - POSTGRES_DB=gis
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"

  producer:
    build:
      context: .
      dockerfile: DockerFile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=geospatial-data
      - S3_BUCKET=${S3_BUCKET}
      - S3_KEY=${S3_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: ["python", "src/data_processing/producer.py"]
    depends_on:
      - kafka

  consumer:
    build:
      context: .
      dockerfile: DockerFile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=geospatial-data
      - KAFKA_GROUP_ID=geospatial-consumer
      - PGHOST=postgis
      - PGPORT=5432
      - PGDATABASE=gis
      - PGUSER=postgres
      - PGPASSWORD=postgres
    command: ["python", "src/data_processing/consumer.py"]
    depends_on:
      - kafka
      - postgis

  anomaly:
    build:
      context: .
      dockerfile: DockerFile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=geospatial-data
      - KAFKA_GROUP_ID=anomaly-detector
      - PGHOST=postgis
      - PGPORT=5432
      - PGDATABASE=gis
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - ANOM_THRESHOLD=4.0
    command: ["python", "src/anomaly_detector/service.py"]
    depends_on:
      - kafka
      - postgis

  dashboard:
    build:
      context: .
      dockerfile: DockerFile
    environment:
      - PGHOST=postgis
      - PGPORT=5432
      - PGDATABASE=gis
      - PGUSER=postgres
      - PGPASSWORD=postgres
    command: ["uvicorn", "src.dashboard.app:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8000:8000"
    depends_on:
      - postgis

networks:
  default:
    name: geospatial-net
